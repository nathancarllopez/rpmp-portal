/**
 * The supaTypes.ts file in this same folder is the autogenerated type file from supabase. These types are derived from and/or related to those
 */

import type { Database } from "./supaTypes.ts";
import type { Session } from "@supabase/supabase-js";

type SupaProfile = Database['public']['Tables']['profiles']['Row'];

type CamelCase<S extends string> = S extends `${infer P}_${infer R}`
  ? `${P}${Capitalize<CamelCase<R>>}`
  : S;

export type Profile = {
  [K in keyof SupaProfile as CamelCase<K & string>]: SupaProfile[K];
};
// Looks like this:
// type Profile = {
//   createdAt: string;
//   drivingRate: number | null;
//   email: string;
//   firstName: string;
//   fullName: string;
//   id: number;
//   kitchenRate: number | null;
//   lastName: string;
//   role: string;
//   userId: string;
// }

export type AuthContextType = {
  session: Session | null
  profile: Profile | null
  setSession: (session: Session | null) => void
  setProfile: (profile: Profile | null) => void
}

export type UserRole = 'admin' | 'employee' | 'manager' | 'owner';