/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardTimecardsImport } from './routes/_dashboard/timecards'
import { Route as DashboardHomeImport } from './routes/_dashboard/home'
import { Route as DashboardFinancesImport } from './routes/_dashboard/finances'
import { Route as authResetPasswordImport } from './routes/(auth)/resetPassword'
import { Route as authLoggedOutImport } from './routes/(auth)/loggedOut'
import { Route as authChangePasswordImport } from './routes/(auth)/changePassword'
import { Route as DashboardSettingsRouteImport } from './routes/_dashboard/settings/route'
import { Route as DashboardProfileRouteImport } from './routes/_dashboard/profile/route'
import { Route as DashboardOrdersRouteImport } from './routes/_dashboard/orders/route'
import { Route as DashboardMenuRouteImport } from './routes/_dashboard/menu/route'
import { Route as DashboardEmployeesRouteImport } from './routes/_dashboard/employees/route'
import { Route as DashboardBackstockRouteImport } from './routes/_dashboard/backstock/route'
import { Route as DashboardProfileIndexImport } from './routes/_dashboard/profile/index'
import { Route as DashboardProfileSearchImport } from './routes/_dashboard/profile/search'
import { Route as DashboardProfileCreateImport } from './routes/_dashboard/profile/create'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTimecardsRoute = DashboardTimecardsImport.update({
  id: '/timecards',
  path: '/timecards',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardHomeRoute = DashboardHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardFinancesRoute = DashboardFinancesImport.update({
  id: '/finances',
  path: '/finances',
  getParentRoute: () => DashboardRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/(auth)/resetPassword',
  path: '/resetPassword',
  getParentRoute: () => rootRoute,
} as any)

const authLoggedOutRoute = authLoggedOutImport.update({
  id: '/(auth)/loggedOut',
  path: '/loggedOut',
  getParentRoute: () => rootRoute,
} as any)

const authChangePasswordRoute = authChangePasswordImport.update({
  id: '/(auth)/changePassword',
  path: '/changePassword',
  getParentRoute: () => rootRoute,
} as any)

const DashboardSettingsRouteRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProfileRouteRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrdersRouteRoute = DashboardOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMenuRouteRoute = DashboardMenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardEmployeesRouteRoute = DashboardEmployeesRouteImport.update({
  id: '/employees',
  path: '/employees',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBackstockRouteRoute = DashboardBackstockRouteImport.update({
  id: '/backstock',
  path: '/backstock',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProfileIndexRoute = DashboardProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardProfileRouteRoute,
} as any)

const DashboardProfileSearchRoute = DashboardProfileSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => DashboardProfileRouteRoute,
} as any)

const DashboardProfileCreateRoute = DashboardProfileCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DashboardProfileRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/backstock': {
      id: '/_dashboard/backstock'
      path: '/backstock'
      fullPath: '/backstock'
      preLoaderRoute: typeof DashboardBackstockRouteImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/employees': {
      id: '/_dashboard/employees'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof DashboardEmployeesRouteImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/menu': {
      id: '/_dashboard/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof DashboardMenuRouteImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/orders': {
      id: '/_dashboard/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof DashboardOrdersRouteImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/profile': {
      id: '/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardImport
    }
    '/(auth)/changePassword': {
      id: '/(auth)/changePassword'
      path: '/changePassword'
      fullPath: '/changePassword'
      preLoaderRoute: typeof authChangePasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/loggedOut': {
      id: '/(auth)/loggedOut'
      path: '/loggedOut'
      fullPath: '/loggedOut'
      preLoaderRoute: typeof authLoggedOutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/resetPassword': {
      id: '/(auth)/resetPassword'
      path: '/resetPassword'
      fullPath: '/resetPassword'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/finances': {
      id: '/_dashboard/finances'
      path: '/finances'
      fullPath: '/finances'
      preLoaderRoute: typeof DashboardFinancesImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/home': {
      id: '/_dashboard/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof DashboardHomeImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/timecards': {
      id: '/_dashboard/timecards'
      path: '/timecards'
      fullPath: '/timecards'
      preLoaderRoute: typeof DashboardTimecardsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/profile/create': {
      id: '/_dashboard/profile/create'
      path: '/create'
      fullPath: '/profile/create'
      preLoaderRoute: typeof DashboardProfileCreateImport
      parentRoute: typeof DashboardProfileRouteImport
    }
    '/_dashboard/profile/search': {
      id: '/_dashboard/profile/search'
      path: '/search'
      fullPath: '/profile/search'
      preLoaderRoute: typeof DashboardProfileSearchImport
      parentRoute: typeof DashboardProfileRouteImport
    }
    '/_dashboard/profile/': {
      id: '/_dashboard/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof DashboardProfileIndexImport
      parentRoute: typeof DashboardProfileRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardProfileRouteRouteChildren {
  DashboardProfileCreateRoute: typeof DashboardProfileCreateRoute
  DashboardProfileSearchRoute: typeof DashboardProfileSearchRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
}

const DashboardProfileRouteRouteChildren: DashboardProfileRouteRouteChildren = {
  DashboardProfileCreateRoute: DashboardProfileCreateRoute,
  DashboardProfileSearchRoute: DashboardProfileSearchRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
}

const DashboardProfileRouteRouteWithChildren =
  DashboardProfileRouteRoute._addFileChildren(
    DashboardProfileRouteRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardBackstockRouteRoute: typeof DashboardBackstockRouteRoute
  DashboardEmployeesRouteRoute: typeof DashboardEmployeesRouteRoute
  DashboardMenuRouteRoute: typeof DashboardMenuRouteRoute
  DashboardOrdersRouteRoute: typeof DashboardOrdersRouteRoute
  DashboardProfileRouteRoute: typeof DashboardProfileRouteRouteWithChildren
  DashboardSettingsRouteRoute: typeof DashboardSettingsRouteRoute
  DashboardFinancesRoute: typeof DashboardFinancesRoute
  DashboardHomeRoute: typeof DashboardHomeRoute
  DashboardTimecardsRoute: typeof DashboardTimecardsRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardBackstockRouteRoute: DashboardBackstockRouteRoute,
  DashboardEmployeesRouteRoute: DashboardEmployeesRouteRoute,
  DashboardMenuRouteRoute: DashboardMenuRouteRoute,
  DashboardOrdersRouteRoute: DashboardOrdersRouteRoute,
  DashboardProfileRouteRoute: DashboardProfileRouteRouteWithChildren,
  DashboardSettingsRouteRoute: DashboardSettingsRouteRoute,
  DashboardFinancesRoute: DashboardFinancesRoute,
  DashboardHomeRoute: DashboardHomeRoute,
  DashboardTimecardsRoute: DashboardTimecardsRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/backstock': typeof DashboardBackstockRouteRoute
  '/employees': typeof DashboardEmployeesRouteRoute
  '/menu': typeof DashboardMenuRouteRoute
  '/orders': typeof DashboardOrdersRouteRoute
  '/profile': typeof DashboardProfileRouteRouteWithChildren
  '/settings': typeof DashboardSettingsRouteRoute
  '/changePassword': typeof authChangePasswordRoute
  '/loggedOut': typeof authLoggedOutRoute
  '/resetPassword': typeof authResetPasswordRoute
  '/finances': typeof DashboardFinancesRoute
  '/home': typeof DashboardHomeRoute
  '/timecards': typeof DashboardTimecardsRoute
  '/profile/create': typeof DashboardProfileCreateRoute
  '/profile/search': typeof DashboardProfileSearchRoute
  '/profile/': typeof DashboardProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/backstock': typeof DashboardBackstockRouteRoute
  '/employees': typeof DashboardEmployeesRouteRoute
  '/menu': typeof DashboardMenuRouteRoute
  '/orders': typeof DashboardOrdersRouteRoute
  '/settings': typeof DashboardSettingsRouteRoute
  '/changePassword': typeof authChangePasswordRoute
  '/loggedOut': typeof authLoggedOutRoute
  '/resetPassword': typeof authResetPasswordRoute
  '/finances': typeof DashboardFinancesRoute
  '/home': typeof DashboardHomeRoute
  '/timecards': typeof DashboardTimecardsRoute
  '/profile/create': typeof DashboardProfileCreateRoute
  '/profile/search': typeof DashboardProfileSearchRoute
  '/profile': typeof DashboardProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/_dashboard/backstock': typeof DashboardBackstockRouteRoute
  '/_dashboard/employees': typeof DashboardEmployeesRouteRoute
  '/_dashboard/menu': typeof DashboardMenuRouteRoute
  '/_dashboard/orders': typeof DashboardOrdersRouteRoute
  '/_dashboard/profile': typeof DashboardProfileRouteRouteWithChildren
  '/_dashboard/settings': typeof DashboardSettingsRouteRoute
  '/(auth)/changePassword': typeof authChangePasswordRoute
  '/(auth)/loggedOut': typeof authLoggedOutRoute
  '/(auth)/resetPassword': typeof authResetPasswordRoute
  '/_dashboard/finances': typeof DashboardFinancesRoute
  '/_dashboard/home': typeof DashboardHomeRoute
  '/_dashboard/timecards': typeof DashboardTimecardsRoute
  '/_dashboard/profile/create': typeof DashboardProfileCreateRoute
  '/_dashboard/profile/search': typeof DashboardProfileSearchRoute
  '/_dashboard/profile/': typeof DashboardProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/test'
    | '/backstock'
    | '/employees'
    | '/menu'
    | '/orders'
    | '/profile'
    | '/settings'
    | '/changePassword'
    | '/loggedOut'
    | '/resetPassword'
    | '/finances'
    | '/home'
    | '/timecards'
    | '/profile/create'
    | '/profile/search'
    | '/profile/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/test'
    | '/backstock'
    | '/employees'
    | '/menu'
    | '/orders'
    | '/settings'
    | '/changePassword'
    | '/loggedOut'
    | '/resetPassword'
    | '/finances'
    | '/home'
    | '/timecards'
    | '/profile/create'
    | '/profile/search'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/test'
    | '/_dashboard/backstock'
    | '/_dashboard/employees'
    | '/_dashboard/menu'
    | '/_dashboard/orders'
    | '/_dashboard/profile'
    | '/_dashboard/settings'
    | '/(auth)/changePassword'
    | '/(auth)/loggedOut'
    | '/(auth)/resetPassword'
    | '/_dashboard/finances'
    | '/_dashboard/home'
    | '/_dashboard/timecards'
    | '/_dashboard/profile/create'
    | '/_dashboard/profile/search'
    | '/_dashboard/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  TestRoute: typeof TestRoute
  authChangePasswordRoute: typeof authChangePasswordRoute
  authLoggedOutRoute: typeof authLoggedOutRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  TestRoute: TestRoute,
  authChangePasswordRoute: authChangePasswordRoute,
  authLoggedOutRoute: authLoggedOutRoute,
  authResetPasswordRoute: authResetPasswordRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard",
        "/test",
        "/(auth)/changePassword",
        "/(auth)/loggedOut",
        "/(auth)/resetPassword"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/backstock",
        "/_dashboard/employees",
        "/_dashboard/menu",
        "/_dashboard/orders",
        "/_dashboard/profile",
        "/_dashboard/settings",
        "/_dashboard/finances",
        "/_dashboard/home",
        "/_dashboard/timecards"
      ]
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_dashboard/backstock": {
      "filePath": "_dashboard/backstock/route.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/employees": {
      "filePath": "_dashboard/employees/route.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/menu": {
      "filePath": "_dashboard/menu/route.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/orders": {
      "filePath": "_dashboard/orders/route.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/profile": {
      "filePath": "_dashboard/profile/route.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/profile/create",
        "/_dashboard/profile/search",
        "/_dashboard/profile/"
      ]
    },
    "/_dashboard/settings": {
      "filePath": "_dashboard/settings/route.tsx",
      "parent": "/_dashboard"
    },
    "/(auth)/changePassword": {
      "filePath": "(auth)/changePassword.tsx"
    },
    "/(auth)/loggedOut": {
      "filePath": "(auth)/loggedOut.tsx"
    },
    "/(auth)/resetPassword": {
      "filePath": "(auth)/resetPassword.tsx"
    },
    "/_dashboard/finances": {
      "filePath": "_dashboard/finances.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/home": {
      "filePath": "_dashboard/home.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/timecards": {
      "filePath": "_dashboard/timecards.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/profile/create": {
      "filePath": "_dashboard/profile/create.tsx",
      "parent": "/_dashboard/profile"
    },
    "/_dashboard/profile/search": {
      "filePath": "_dashboard/profile/search.tsx",
      "parent": "/_dashboard/profile"
    },
    "/_dashboard/profile/": {
      "filePath": "_dashboard/profile/index.tsx",
      "parent": "/_dashboard/profile"
    }
  }
}
ROUTE_MANIFEST_END */
